//------------------------------------------------------------------------------
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//------------------------------------------------------------------------------
#include "pch.h"

#pragma warning(push)
#pragma warning(disable: 4100) // unreferenced formal parameter

#if defined _DEBUG && !defined DISABLE_XAML_GENERATED_BINDING_DEBUG_OUTPUT
extern "C" __declspec(dllimport) int __stdcall IsDebuggerPresent();
#endif

#include "MainPage.xaml.h"

void ::Raymarch_Fractals::MainPage::InitializeComponent()
{
    if (_contentLoaded)
    {
        return;
    }
    _contentLoaded = true;
    ::Windows::Foundation::Uri^ resourceLocator = ref new ::Windows::Foundation::Uri(L"ms-appx:///MainPage.xaml");
    ::Windows::UI::Xaml::Application::LoadComponent(this, resourceLocator, ::Windows::UI::Xaml::Controls::Primitives::ComponentResourceLocation::Application);
}

void ::Raymarch_Fractals::MainPage::Connect(int __connectionId, ::Platform::Object^ __target)
{
    switch (__connectionId)
    {
    case 2:
        {
            this->sc_fractalCanvas = safe_cast<::Windows::UI::Xaml::Controls::SwapChainPanel^>(__target);
        }
        break;
    case 3:
        {
            this->fv_paramSetter = safe_cast<::Windows::UI::Xaml::Controls::FlipView^>(__target);
        }
        break;
    case 4:
        {
            this->sl_3Dangle1 = safe_cast<::Windows::UI::Xaml::Controls::Slider^>(__target);
        }
        break;
    case 5:
        {
            this->sl_3Dangle2 = safe_cast<::Windows::UI::Xaml::Controls::Slider^>(__target);
        }
        break;
    case 6:
        {
            this->sl_3Dangle3 = safe_cast<::Windows::UI::Xaml::Controls::Slider^>(__target);
        }
        break;
    case 7:
        {
            this->sl_3Dscale = safe_cast<::Windows::UI::Xaml::Controls::Slider^>(__target);
        }
        break;
    case 8:
        {
            this->sl_3DoffsetX = safe_cast<::Windows::UI::Xaml::Controls::Slider^>(__target);
        }
        break;
    case 9:
        {
            this->sl_3DoffsetY = safe_cast<::Windows::UI::Xaml::Controls::Slider^>(__target);
        }
        break;
    case 10:
        {
            this->sl_3DoffsetZ = safe_cast<::Windows::UI::Xaml::Controls::Slider^>(__target);
        }
        break;
    case 11:
        {
            this->sl_3Diters = safe_cast<::Windows::UI::Xaml::Controls::Slider^>(__target);
        }
        break;
    case 12:
        {
            this->sl_3Dambient = safe_cast<::Windows::UI::Xaml::Controls::Slider^>(__target);
        }
        break;
    case 13:
        {
            this->sl_3Docclusion = safe_cast<::Windows::UI::Xaml::Controls::Slider^>(__target);
        }
        break;
    case 14:
        {
            this->sl_3Depsilon = safe_cast<::Windows::UI::Xaml::Controls::Slider^>(__target);
        }
        break;
    case 15:
        {
            this->sl_3DminDist = safe_cast<::Windows::UI::Xaml::Controls::Slider^>(__target);
        }
        break;
    case 16:
        {
            this->sl_3DmaxDist = safe_cast<::Windows::UI::Xaml::Controls::Slider^>(__target);
        }
        break;
    case 17:
        {
            this->sl_3DmaxMarch = safe_cast<::Windows::UI::Xaml::Controls::Slider^>(__target);
        }
        break;
    case 18:
        {
            this->sl_NTiter = safe_cast<::Windows::UI::Xaml::Controls::Slider^>(__target);
        }
        break;
    case 19:
        {
            this->tb_NTzoom = safe_cast<::Windows::UI::Xaml::Controls::TextBox^>(__target);
        }
        break;
    case 20:
        {
            this->tb_NTcenterY = safe_cast<::Windows::UI::Xaml::Controls::TextBox^>(__target);
        }
        break;
    case 21:
        {
            this->tb_NTcenterX = safe_cast<::Windows::UI::Xaml::Controls::TextBox^>(__target);
        }
        break;
    case 22:
        {
            this->tb_NTstepIm = safe_cast<::Windows::UI::Xaml::Controls::TextBox^>(__target);
        }
        break;
    case 23:
        {
            this->tb_NTstepRe = safe_cast<::Windows::UI::Xaml::Controls::TextBox^>(__target);
        }
        break;
    case 24:
        {
            this->sl_MBiter = safe_cast<::Windows::UI::Xaml::Controls::Slider^>(__target);
        }
        break;
    case 25:
        {
            this->tb_MBzoom = safe_cast<::Windows::UI::Xaml::Controls::TextBox^>(__target);
        }
        break;
    case 26:
        {
            this->tb_MBfunction = safe_cast<::Windows::UI::Xaml::Controls::TextBox^>(__target);
        }
        break;
    case 27:
        {
            this->tb_MBcenterY = safe_cast<::Windows::UI::Xaml::Controls::TextBox^>(__target);
        }
        break;
    case 28:
        {
            this->tb_MBcenterX = safe_cast<::Windows::UI::Xaml::Controls::TextBox^>(__target);
        }
        break;
    case 29:
        {
            this->tb_MBoffsetY = safe_cast<::Windows::UI::Xaml::Controls::TextBox^>(__target);
        }
        break;
    case 30:
        {
            this->tb_MBoffsetX = safe_cast<::Windows::UI::Xaml::Controls::TextBox^>(__target);
        }
        break;
    }
    _contentLoaded = true;
}

::Windows::UI::Xaml::Markup::IComponentConnector^ ::Raymarch_Fractals::MainPage::GetBindingConnector(int __connectionId, ::Platform::Object^ __target)
{
    __connectionId;         // unreferenced
    __target;               // unreferenced
    return nullptr;
}

#pragma warning(pop)


